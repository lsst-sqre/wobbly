"""Initial schema

Revision ID: ef0ac4e1d0cb
Revises:
Create Date: 2024-11-12 23:07:29.449620+00:00

"""

from collections.abc import Sequence

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "ef0ac4e1d0cb"
down_revision: str | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "job",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("service", sa.Text(), nullable=False),
        sa.Column("owner", sa.Text(), nullable=False),
        sa.Column(
            "phase",
            sa.Enum(
                "PENDING",
                "QUEUED",
                "EXECUTING",
                "COMPLETED",
                "ERROR",
                "UNKNOWN",
                "HELD",
                "SUSPENDED",
                "ABORTED",
                "ARCHIVED",
                name="executionphase",
            ),
            nullable=False,
        ),
        sa.Column("run_id", sa.Text(), nullable=True),
        sa.Column(
            "parameters",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=False,
        ),
        sa.Column("message_id", sa.Text(), nullable=True),
        sa.Column("creation_time", sa.DateTime(), nullable=False),
        sa.Column("start_time", sa.DateTime(), nullable=True),
        sa.Column("end_time", sa.DateTime(), nullable=True),
        sa.Column("destruction_time", sa.DateTime(), nullable=False),
        sa.Column("execution_duration", sa.Integer(), nullable=True),
        sa.Column("quote", sa.DateTime(), nullable=True),
        sa.Column(
            "error_type",
            sa.Enum("TRANSIENT", "FATAL", name="errortype"),
            nullable=True,
        ),
        sa.Column("error_code", sa.Text(), nullable=True),
        sa.Column("error_message", sa.Text(), nullable=True),
        sa.Column("error_detail", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "by_service_owner_phase",
        "job",
        ["service", "owner", "phase", "creation_time"],
        unique=False,
    )
    op.create_index(
        "by_service_owner_time",
        "job",
        ["service", "owner", "creation_time"],
        unique=False,
    )
    op.create_table(
        "job_result",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("job_id", sa.Integer(), nullable=False),
        sa.Column("result_id", sa.Text(), nullable=False),
        sa.Column("sequence", sa.Integer(), nullable=False),
        sa.Column("url", sa.Text(), nullable=False),
        sa.Column("size", sa.Integer(), nullable=True),
        sa.Column("mime_type", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(["job_id"], ["job.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "by_result_id", "job_result", ["job_id", "result_id"], unique=True
    )
    op.create_index(
        "by_sequence", "job_result", ["job_id", "sequence"], unique=True
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("by_sequence", table_name="job_result")
    op.drop_index("by_result_id", table_name="job_result")
    op.drop_table("job_result")
    op.drop_index("by_service_owner_time", table_name="job")
    op.drop_index("by_service_owner_phase", table_name="job")
    op.drop_table("job")
    # ### end Alembic commands ###
